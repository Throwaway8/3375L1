#include <iostream>
#include "address_map_arm.h"
using namespace std;


int main(void)
{

	volatile int SW[4];
	*SW = SW_BASE;
	SW[0] = (*SW = 0UL << 0);
	SW[1] = (*SW = 0UL << 1);
	SW[2] = (*SW = 0UL << 2);
	SW[3] = (*SW = 0UL << 3);
	
	volatile int Hex[7];
	*Hex = HEX3_HEX0_BASE;
	Hex[0] = (*Hex = 0UL << 0);
	Hex[1] = (*Hex = 0UL << 1);
	Hex[2] = (*Hex = 0UL << 2);
	Hex[3] = (*Hex = 0UL << 3);
	Hex[4] = (*Hex = 0UL << 4);
	Hex[5] = (*Hex = 0UL << 5);
	Hex[6] = (*Hex = 0UL << 6);
	
	int a = 1;
	while (a = 1)
	{
		if (SW[0] == 0 && SW[1] == 0 && SW[2] == 0 && SW[3] == 0)
		{
			Hex[0] |= 1UL << 0;
			Hex[1] |= 1UL << 1;
			Hex[2] |= 1UL << 2;
			Hex[3] |= 1UL << 3;
			Hex[4] |= 1UL << 4;
			Hex[5] |= 1UL << 5;
			Hex[6] = 0UL << 6;
		}
		
		else if (SW[0] == 1 && SW[1] == 0 && SW[2] == 0 && SW[3] == 0)
		{
			Hex[0] = 0UL << 0;
			Hex[1] |= 1UL << 1;
			Hex[2] |= 1UL << 2;
			Hex[3] = 0UL << 3;
			Hex[4] = 0UL << 4;
			Hex[5] = 0UL << 5;
			Hex[6] = 0UL << 6;
		}

		else if (SW[0] == 0 && SW[1] == 1 && SW[2] == 0 && SW[3] == 0)
		{
			Hex[0] |= 1UL << 0;
			Hex[1] |= 1UL << 1;
			Hex[2] = 0UL << 2;
			Hex[3] |= 1UL << 3;
			Hex[4] |= 1UL << 4;
			Hex[5] = 0UL << 5;
			Hex[6] |= 1UL << 6;
		}

		else if (SW[0] == 1 && SW[1] == 1 && SW[2] == 0 && SW[3] == 0)
		{
			Hex[0] |= 1UL << 0;
			Hex[1] |= 1UL << 1;
			Hex[2] |= 1UL << 2;
			Hex[3] |= 1UL << 3;
			Hex[4] = 0UL << 4;
			Hex[5] = 0UL << 5;
			Hex[6] |= 1UL << 6;
		}

		else if (SW[0] == 0 && SW[1] == 0 && SW[2] == 1 && SW[3] == 0)
		{
			Hex[0] = 0UL << 0;
			Hex[1] |= 1UL << 1;
			Hex[2] |= 1UL << 2;
			Hex[3] = 0UL << 3;
			Hex[4] = 0UL << 4;
			Hex[5] |= 1UL << 5;
			Hex[6] |= 1UL << 6;
		}

		else if (SW[0] == 1 && SW[1] == 0 && SW[2] == 1 && SW[3] == 0)
		{
			Hex[0] |= 1UL << 0;
			Hex[1] = 0UL << 1;
			Hex[2] |= 1UL << 2;
			Hex[3] |= 1UL << 3;
			Hex[4] = 0UL << 4;
			Hex[5] |= 1UL << 5;
			Hex[6] |= 1UL << 6;
		}

		else if (SW[0] == 0 && SW[1] == 1 && SW[2] == 1 && SW[3] == 0)
		{
			Hex[0] |= 1UL << 0;
			Hex[1] = 0UL << 1;
			Hex[2] |= 1UL << 2;
			Hex[3] |= 1UL << 3;
			Hex[4] |= 1UL << 4;
			Hex[5] |= 1UL << 5;
			Hex[6] |= 1UL << 6;
		}

		else if (SW[0] == 1 && SW[1] == 1 && SW[2] == 1 && SW[3] == 0)
		{
			Hex[0] |= 1UL << 0;
			Hex[1] |= 1UL << 1;
			Hex[2] |= 1UL << 2;
			Hex[3] = 0UL << 3;
			Hex[4] = 0UL << 4;
			Hex[5] = 0UL << 5;
			Hex[6] = 0UL << 6;
		}

		else if (SW[0] == 0 && SW[1] == 0 && SW[2] == 0 && SW[3] == 1)
		{
			Hex[0] |= 1UL << 0;
			Hex[1] |= 1UL << 1;
			Hex[2] |= 1UL << 2;
			Hex[3] |= 1UL << 3;
			Hex[4] |= 1UL << 4;
			Hex[5] |= 1UL << 5;
			Hex[6] |= 1UL << 6;
		}

		else if (SW[0] == 1 && SW[1] == 0 && SW[2] == 0 && SW[3] == 1)
		{
			Hex[0] |= 1UL << 0;
			Hex[1] |= 1UL << 1;
			Hex[2] |= 1UL << 2;
			Hex[3] |= 1UL << 3;
			Hex[4] = 0UL << 4;
			Hex[5] |= 1UL << 5;
			Hex[6] |= 1UL << 6;
		}

		else
		{
			Hex[0] &= 0UL << 0;
			Hex[1] &= 0UL << 1;
			Hex[2] &= 0UL << 2;
			Hex[3] &= 0UL << 3;
			Hex[4] &= 0UL << 4;
			Hex[5] &= 0UL << 5;
			Hex[6] &= 0UL << 6;
		}
		
	}


}
